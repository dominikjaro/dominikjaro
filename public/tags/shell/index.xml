<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Shell on Dominik Jaro</title>
        <link>http://localhost:1313/tags/shell/</link>
        <description>Recent content in Shell on Dominik Jaro</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Dominik Jaro</copyright>
        <lastBuildDate>Tue, 10 Dec 2024 08:35:47 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/shell/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>üå•Ô∏è **Moving data between GCP projects/buckets** üåê</title>
        <link>http://localhost:1313/p/%EF%B8%8F-moving-data-between-gcp-projects/buckets/</link>
        <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/%EF%B8%8F-moving-data-between-gcp-projects/buckets/</guid>
        <description>&lt;h2 id=&#34;-moving-data-between-gcp-projects-ie-refreshing-one-project-from-another&#34;&gt;üöÄ &lt;strong&gt;Moving data between GCP projects (i.e. refreshing one project from another)&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;This guide provides a step-by-step process to transfer data from one Google Cloud Project to another.&lt;/p&gt;
&lt;p&gt;This approach is primarily useful when creating a new environment (e.g., for development) and seeding it with data from an existing project.&lt;/p&gt;
&lt;h3 id=&#34;-objective&#34;&gt;üéØ &lt;strong&gt;Objective:&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Transfer data from a source GCP project to a destination project, including Cloud Storage buckets, Firestore (Datastore), and BigQuery datasets.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Create in Terraform:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Buckets&lt;/li&gt;
&lt;li&gt;BQ Datasets&lt;/li&gt;
&lt;li&gt;Datastore db&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-pre-requisites&#34;&gt;üõ†Ô∏è &lt;strong&gt;Pre-Requisites:&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Access to both source and destination GCP projects.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gsuite alias account&lt;/strong&gt; for managing the data transfer securely.&lt;/li&gt;
&lt;li&gt;The scripts you will need - [PATH_TO_THE_SCRIPTS]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-instructions&#34;&gt;üìã &lt;strong&gt;Instructions&lt;/strong&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a GSuite Alias Account&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set up a &lt;strong&gt;GSuite alias account&lt;/strong&gt; that will be used solely for this data transfer.&lt;/li&gt;
&lt;li&gt;Ensure the account has &lt;strong&gt;minimum required privileges&lt;/strong&gt; (e.g., access to only relevant buckets, Firestore, and BigQuery).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Grant Access in Destination Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Grant the required permissions in the &lt;strong&gt;Google Cloud Console&lt;/strong&gt; under the specific &lt;strong&gt;Dev folder&lt;/strong&gt; or relevant folder in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Ensure this account has sufficient privileges in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Log into GCP with the Test Account&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the alias account to log into Google Cloud Platform (GCP).&lt;/li&gt;
&lt;li&gt;Validate access by navigating to the &lt;strong&gt;destination project&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Revoke Excess Access&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To prevent any unintentional access, revoke any excess permissions in your terminal:&lt;/li&gt;
&lt;li&gt;This ensures that only the intended project is accessed during the transfer.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud auth revoke
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud auth login
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud projects list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud config get project
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Delete Storage Buckets in the Destination Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to &lt;strong&gt;Cloud Storage&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt; and delete any existing buckets that need to be recreated or refreshed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Delete the Firestore Database in the Destination Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;strong&gt;Firestore&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt; and delete the database if required. Ensure that you are aware of the data that needs to be replaced.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Export Firestore Database from Source Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the &lt;strong&gt;Source Project&lt;/strong&gt;, export the Firestore database to a &lt;strong&gt;Cloud Storage bucket&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create Storage Buckets in the Destination Project - Terraform&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;strong&gt;Terraform&lt;/strong&gt; to create the necessary &lt;strong&gt;Cloud Storage buckets&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Ensure that bucket configurations match the source project for consistency.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create BigQuery Datasets in the Destination Project - Terraform&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;strong&gt;Terraform&lt;/strong&gt; to set up the &lt;strong&gt;BigQuery datasets&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Ensure that dataset schemas and settings match the source.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create Firestore (Datastore) in the Destination Project - Terraform&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Again, using &lt;strong&gt;Terraform&lt;/strong&gt;, create the necessary &lt;strong&gt;Firestore in Datastore mode&lt;/strong&gt; (default) database in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Locate Bootstrap Scripts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the platform repo, find the [PATH_TO_THE_SCRIPTS] scripts.&lt;/li&gt;
&lt;li&gt;These scripts will automate the seeding of data into the destination project.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Synchronize Cloud Storage Data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run the script seed-gcs.sh, which synchronizes data between Cloud Storage buckets from the source to the destination project.&lt;/li&gt;
&lt;li&gt;This step ensures that all files from the source bucket are transferred to the destination bucket.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./seed-gcs.sh &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;SOURCE&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;DESTINATION&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Synchronize Firestore (Datastore) Data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the seed-datastore.sh script to synchronize the exported &lt;strong&gt;Datastore&lt;/strong&gt; content from the &lt;strong&gt;source bucket&lt;/strong&gt; to the &lt;strong&gt;destination bucket&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;This script also imports data into the &lt;strong&gt;Firestore (Datastore)&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Key environment variables to set:
&lt;ul&gt;
&lt;li&gt;SRC_LOCATION: Source project location.&lt;/li&gt;
&lt;li&gt;SRC_BUCKET: Name of the source bucket.&lt;/li&gt;
&lt;li&gt;SNAPSHOT: Snapshot of the data.&lt;/li&gt;
&lt;li&gt;DEST_PROJECT: Destination project name.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./seed-datastore.sh &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;DESTINATION&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create Composite Indexes in Datastore (Destination)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Define indexes in an index.yaml file based on query requirements.&lt;/li&gt;
&lt;li&gt;Use gcloud to create the indexes:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud firestore indexes create index.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Synchronize BigQuery Data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run the seed-bigquery.sh script to synchronize BigQuery data from the source to the destination project.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./seed-bigquery.sh &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;SOURCE&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;DESTINATION&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Update Service Config in Datastore&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;strong&gt;Firestore (Datastore)&lt;/strong&gt;, update the &lt;strong&gt;Service Config&lt;/strong&gt; for the application:
&lt;ul&gt;
&lt;li&gt;Namespace: feefo&lt;/li&gt;
&lt;li&gt;Kind: ServiceConfig&lt;/li&gt;
&lt;li&gt;Update the hostname to point to the correct VM within the destination project.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bounce the Pods and VMs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After all data is transferred and services are set up, &lt;strong&gt;restart the pods and VMs&lt;/strong&gt; to ensure all services start fresh and use the new data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
