<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Automation on Dominik Jaro</title>
        <link>http://localhost:1313/tags/automation/</link>
        <description>Recent content in Automation on Dominik Jaro</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Dominik Jaro</copyright>
        <lastBuildDate>Tue, 10 Dec 2024 08:35:47 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/automation/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>üå•Ô∏è **Moving data between GCP projects/buckets** üåê</title>
        <link>http://localhost:1313/p/%EF%B8%8F-moving-data-between-gcp-projects/buckets/</link>
        <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/%EF%B8%8F-moving-data-between-gcp-projects/buckets/</guid>
        <description>&lt;h2 id=&#34;-moving-data-between-gcp-projects-ie-refreshing-one-project-from-another&#34;&gt;üöÄ &lt;strong&gt;Moving data between GCP projects (i.e. refreshing one project from another)&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;This guide provides a step-by-step process to transfer data from one Google Cloud Project to another.&lt;/p&gt;
&lt;p&gt;This approach is primarily useful when creating a new environment (e.g., for development) and seeding it with data from an existing project.&lt;/p&gt;
&lt;h3 id=&#34;-objective&#34;&gt;üéØ &lt;strong&gt;Objective:&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Transfer data from a source GCP project to a destination project, including Cloud Storage buckets, Firestore (Datastore), and BigQuery datasets.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Create in Terraform:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Buckets&lt;/li&gt;
&lt;li&gt;BQ Datasets&lt;/li&gt;
&lt;li&gt;Datastore db&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-pre-requisites&#34;&gt;üõ†Ô∏è &lt;strong&gt;Pre-Requisites:&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Access to both source and destination GCP projects.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gsuite alias account&lt;/strong&gt; for managing the data transfer securely.&lt;/li&gt;
&lt;li&gt;The scripts you will need - [PATH_TO_THE_SCRIPTS]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-instructions&#34;&gt;üìã &lt;strong&gt;Instructions&lt;/strong&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a GSuite Alias Account&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set up a &lt;strong&gt;GSuite alias account&lt;/strong&gt; that will be used solely for this data transfer.&lt;/li&gt;
&lt;li&gt;Ensure the account has &lt;strong&gt;minimum required privileges&lt;/strong&gt; (e.g., access to only relevant buckets, Firestore, and BigQuery).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Grant Access in Destination Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Grant the required permissions in the &lt;strong&gt;Google Cloud Console&lt;/strong&gt; under the specific &lt;strong&gt;Dev folder&lt;/strong&gt; or relevant folder in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Ensure this account has sufficient privileges in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Log into GCP with the Test Account&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the alias account to log into Google Cloud Platform (GCP).&lt;/li&gt;
&lt;li&gt;Validate access by navigating to the &lt;strong&gt;destination project&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Revoke Excess Access&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To prevent any unintentional access, revoke any excess permissions in your terminal:&lt;/li&gt;
&lt;li&gt;This ensures that only the intended project is accessed during the transfer.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud auth revoke
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud auth login
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud projects list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud config get project
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Delete Storage Buckets in the Destination Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to &lt;strong&gt;Cloud Storage&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt; and delete any existing buckets that need to be recreated or refreshed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Delete the Firestore Database in the Destination Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;strong&gt;Firestore&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt; and delete the database if required. Ensure that you are aware of the data that needs to be replaced.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Export Firestore Database from Source Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the &lt;strong&gt;Source Project&lt;/strong&gt;, export the Firestore database to a &lt;strong&gt;Cloud Storage bucket&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create Storage Buckets in the Destination Project - Terraform&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;strong&gt;Terraform&lt;/strong&gt; to create the necessary &lt;strong&gt;Cloud Storage buckets&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Ensure that bucket configurations match the source project for consistency.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create BigQuery Datasets in the Destination Project - Terraform&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;strong&gt;Terraform&lt;/strong&gt; to set up the &lt;strong&gt;BigQuery datasets&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Ensure that dataset schemas and settings match the source.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create Firestore (Datastore) in the Destination Project - Terraform&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Again, using &lt;strong&gt;Terraform&lt;/strong&gt;, create the necessary &lt;strong&gt;Firestore in Datastore mode&lt;/strong&gt; (default) database in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Locate Bootstrap Scripts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the platform repo, find the [PATH_TO_THE_SCRIPTS] scripts.&lt;/li&gt;
&lt;li&gt;These scripts will automate the seeding of data into the destination project.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Synchronize Cloud Storage Data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run the script seed-gcs.sh, which synchronizes data between Cloud Storage buckets from the source to the destination project.&lt;/li&gt;
&lt;li&gt;This step ensures that all files from the source bucket are transferred to the destination bucket.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./seed-gcs.sh &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;SOURCE&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;DESTINATION&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Synchronize Firestore (Datastore) Data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the seed-datastore.sh script to synchronize the exported &lt;strong&gt;Datastore&lt;/strong&gt; content from the &lt;strong&gt;source bucket&lt;/strong&gt; to the &lt;strong&gt;destination bucket&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;This script also imports data into the &lt;strong&gt;Firestore (Datastore)&lt;/strong&gt; in the &lt;strong&gt;Destination Project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Key environment variables to set:
&lt;ul&gt;
&lt;li&gt;SRC_LOCATION: Source project location.&lt;/li&gt;
&lt;li&gt;SRC_BUCKET: Name of the source bucket.&lt;/li&gt;
&lt;li&gt;SNAPSHOT: Snapshot of the data.&lt;/li&gt;
&lt;li&gt;DEST_PROJECT: Destination project name.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./seed-datastore.sh &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;DESTINATION&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create Composite Indexes in Datastore (Destination)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Define indexes in an index.yaml file based on query requirements.&lt;/li&gt;
&lt;li&gt;Use gcloud to create the indexes:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud firestore indexes create index.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Synchronize BigQuery Data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run the seed-bigquery.sh script to synchronize BigQuery data from the source to the destination project.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./seed-bigquery.sh &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;SOURCE&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;DESTINATION&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Update Service Config in Datastore&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;strong&gt;Firestore (Datastore)&lt;/strong&gt;, update the &lt;strong&gt;Service Config&lt;/strong&gt; for the application:
&lt;ul&gt;
&lt;li&gt;Namespace: feefo&lt;/li&gt;
&lt;li&gt;Kind: ServiceConfig&lt;/li&gt;
&lt;li&gt;Update the hostname to point to the correct VM within the destination project.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bounce the Pods and VMs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After all data is transferred and services are set up, &lt;strong&gt;restart the pods and VMs&lt;/strong&gt; to ensure all services start fresh and use the new data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>üöÄ `cf-terraforming` - the tool to Import Cloudflare configurations into Terraform</title>
        <link>http://localhost:1313/p/cf-terraforming-the-tool-to-import-cloudflare-configurations-into-terraform/</link>
        <pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/cf-terraforming-the-tool-to-import-cloudflare-configurations-into-terraform/</guid>
        <description>&lt;img src="http://localhost:1313/p/cf-terraforming-the-tool-to-import-cloudflare-configurations-into-terraform/terraform-cloudflare.png" alt="Featured image of post üöÄ `cf-terraforming` - the tool to Import Cloudflare configurations into Terraform" /&gt;&lt;h2 id=&#34;-introduction&#34;&gt;üëã Introduction
&lt;/h2&gt;&lt;p&gt;In my role as a DevOps Engineer, I tackled the challenge of importing our existing Cloudflare configurations into Terraform. Manual migration would have been time-consuming and error-prone. &lt;code&gt;cf-terraforming&lt;/code&gt;‚Äîa powerful tool that automates this process by generating Terraform resource code and fetching resource IDs directly from Cloudflare.&lt;/p&gt;
&lt;h2 id=&#34;-installation&#34;&gt;‚öôÔ∏è Installation
&lt;/h2&gt;&lt;p&gt;On macOS, installation is straightforward using Homebrew:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew tap cloudflare/cloudflare
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install cloudflare/cloudflare/cf-terraforming
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-prerequisites&#34;&gt;‚úÖ Prerequisites
&lt;/h2&gt;&lt;p&gt;Before getting started, ensure you have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A Cloudflare account with defined resources&lt;/li&gt;
&lt;li&gt;Cloudflare API key&lt;/li&gt;
&lt;li&gt;An initialized Terraform directory&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-setting-up-credentials&#34;&gt;üîë Setting Up Credentials
&lt;/h2&gt;&lt;p&gt;Best practice is to store Cloudflare credentials as environment variables:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# When using API Key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;CLOUDFLARE_EMAIL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;user@example.com&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;CLOUDFLARE_API_KEY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;my_cloudflare_api_key&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-key-commands&#34;&gt;üíª Key Commands
&lt;/h2&gt;&lt;h3 id=&#34;-generating-resources&#34;&gt;üõ†Ô∏è Generating Resources
&lt;/h3&gt;&lt;p&gt;To generate Terraform code for your Cloudflare resources:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cf-terraforming generate &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --resource-type &lt;span class=&#34;s2&#34;&gt;&amp;#34;cloudflare_record&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --zone &lt;span class=&#34;s2&#34;&gt;&amp;#34;my_zone_id&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; generated_resources.tf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;-importing-resources&#34;&gt;‚¨áÔ∏è Importing Resources
&lt;/h3&gt;&lt;p&gt;To get import commands and resource IDs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cf-terraforming import &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --resource-type &lt;span class=&#34;s2&#34;&gt;&amp;#34;cloudflare_record&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --zone &lt;span class=&#34;s2&#34;&gt;&amp;#34;my_zone_id&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-difficulties-that-i-faced&#34;&gt;ü§î Difficulties That I Faced
&lt;/h2&gt;&lt;p&gt;While using &lt;code&gt;cf-terraforming&lt;/code&gt;, I encountered several challenges:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Resource Naming&lt;/strong&gt;: The tool assigned resource IDs as names, leading to less readable Terraform code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Import Limitations&lt;/strong&gt;: Some resources were not supported by &lt;code&gt;cf-terraforming&lt;/code&gt;, requiring manual handling.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To overcome these issues, I:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Renamed Resources&lt;/strong&gt;: Updated the resource names in the Terraform files for clarity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Custom Script for Resource IDs&lt;/strong&gt;: Created a script to retrieve resource IDs and integrate them into the Terraform import commands.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-pro-tips&#34;&gt;üí° Pro Tips
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Resource Naming&lt;/strong&gt;: &lt;code&gt;cf-terraforming&lt;/code&gt; names resources based on IDs. Consider renaming them for better readability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Version Control&lt;/strong&gt;: Always commit your generated Terraform code to version control.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Validation&lt;/strong&gt;: After importing, use &lt;code&gt;terraform plan&lt;/code&gt; to verify the imported state matches the actual configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-available-commands&#34;&gt;üõ†Ô∏è Available Commands
&lt;/h2&gt;&lt;p&gt;The tool offers several useful commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;generate&lt;/code&gt;: Create Terraform resource definitions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import&lt;/code&gt;: Generate import commands&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;: Check tool version&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help&lt;/code&gt;: Access detailed help&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-conclusion&#34;&gt;üéâ Conclusion
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;cf-terraforming&lt;/code&gt; significantly streamlines the process of managing Cloudflare resources with Terraform. While it may require some post-processing for resource naming, it&amp;rsquo;s an invaluable tool for DevOps automation.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>üå•Ô∏è **GCP Cloud Resume API Challenge** üåê</title>
        <link>http://localhost:1313/p/%EF%B8%8F-gcp-cloud-resume-api-challenge/</link>
        <pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/%EF%B8%8F-gcp-cloud-resume-api-challenge/</guid>
        <description>&lt;img src="http://localhost:1313/p/%EF%B8%8F-gcp-cloud-resume-api-challenge/architecture-image.png" alt="Featured image of post üå•Ô∏è **GCP Cloud Resume API Challenge** üåê" /&gt;&lt;p&gt;Reference website: &lt;a class=&#34;link&#34; href=&#34;https://www.cloudresumeapi.dev&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cloudresumeapi.dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pre-requisites üîß&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a class=&#34;link&#34; href=&#34;https://cloud.google.com/?hl=en&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google Cloud Platform&lt;/a&gt; account and a project&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.hashicorp.com/terraform/install&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The Terraform CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The text editor I used is &lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com/download&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1--to-get-started-i-set-up-your-gcp-and-github&#34;&gt;1. üåÄ To get started, I set up your GCP and GitHub
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;A project and service account in &lt;strong&gt;GCP&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;GitHub&lt;/strong&gt; repository&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;Firestore&lt;/strong&gt; database - set up a table named &lt;code&gt;Resumes&lt;/code&gt; containing sample resume data&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2--create-a-json-resume&#34;&gt;2. üìù Create a JSON Resume
&lt;/h3&gt;&lt;p&gt;Use &lt;a class=&#34;link&#34; href=&#34;https://jsonresume.org/schema/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this schema&lt;/a&gt; to create your own JSON resume.&lt;/p&gt;
&lt;h3 id=&#34;3--clone-the-project-repository-to-your-local-machine-and-change-directory-to-the-project-directory&#34;&gt;3. üìÇ Clone the project repository to your local machine and change directory to the project directory
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Create the infrastructure using Terraform üõ†Ô∏è&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;provider.tf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;variables.tf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform.tfvars&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;main.tf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4--create-the-function-using-python&#34;&gt;4. üêç Create the function using Python
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Google Cloud Functions üåÄ:&lt;/strong&gt; Fetch and return resume data based on an id. Utilize &lt;strong&gt;HTTP Trigger&lt;/strong&gt; with anonymous access.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;main.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;requirements.txt&lt;/code&gt; (define the dependencies - these will be installed when the function is deployed)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the &lt;code&gt;main.py&lt;/code&gt; you have to import &lt;code&gt;Flask&lt;/code&gt; - used for web development, including the &lt;code&gt;jsonify&lt;/code&gt; method used in the script and &lt;code&gt;google-cloud-firestore&lt;/code&gt; - used to interact with Firestore&lt;/p&gt;
&lt;p&gt;&lt;code&gt;functions-framework=3.*&lt;/code&gt; - The functions-framework is a set of libraries for writing lightweight, portable Python functions that can run in various environments, including &lt;strong&gt;Google Cloud Functions&lt;/strong&gt;, your local development machine, or other cloud environments. It provides a consistent execution environment and request context, and allows you to focus on writing your function logic rather than worrying about the infrastructure.&lt;/p&gt;
&lt;h3 id=&#34;5--initialize-the-terraform-project&#34;&gt;5. üèóÔ∏è Initialize the Terraform project
&lt;/h3&gt;&lt;p&gt;Once you have configured the project, you can upload the Terraform configuration to &lt;strong&gt;Google Cloud Platform&lt;/strong&gt; by running the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;terraform plan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;To check the changes that will be made to your infrastructure.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;terraform apply
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;When prompted, review the changes and type &lt;code&gt;yes&lt;/code&gt; to confirm that you want to apply the changes.&lt;/p&gt;
&lt;h3 id=&#34;6-create-the-cloud-build-for-cicd-building_construction&#34;&gt;6. Create the Cloud Build for CI/CD :building_construction:
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;I authorized &lt;strong&gt;Cloud Build&lt;/strong&gt; to access the &lt;strong&gt;GitHub&lt;/strong&gt; repository&lt;/li&gt;
&lt;li&gt;I created a trigger to build the function when a new commit is pushed to the repository&lt;/li&gt;
&lt;li&gt;I created the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file to define the build steps&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;7--test-the-api&#34;&gt;7. üß™ Test the API
&lt;/h3&gt;&lt;p&gt;API URL: &lt;a class=&#34;link&#34; href=&#34;https://europe-west2-cloud-resume-api-418008.cloudfunctions.net/cloudresumeapi-1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://europe-west2-cloud-resume-api-418008.cloudfunctions.net/cloudresumeapi-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or open the terminal and run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl https://europe-west2-cloud-resume-api-418008.cloudfunctions.net/cloudresumeapi-1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
